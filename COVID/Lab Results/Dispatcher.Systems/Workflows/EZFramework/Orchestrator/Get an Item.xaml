<Activity mc:Ignorable="sap sap2010" x:Class="Get_an_Item_or_Stop" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:el="clr-namespace:EZFramework.Logging;assembly=EZFramework" xmlns:eo="clr-namespace:EZFramework.Orchestrator;assembly=EZFramework" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="intProcessingLimit" Type="InArgument(x:Int32)" />
    <x:Property Name="intProcessed" Type="InOutArgument(x:Int32)" />
    <x:Property Name="itemTransaction" Type="OutArgument(ui:QueueItem)" />
    <x:Property Name="arrNotReleaseNames" Type="InArgument(s:String[])" />
    <x:Property Name="strQueueName" Type="InArgument(x:String)" />
    <x:Property Name="strQueueFolder" Type="InArgument(x:String)" />
    <x:Property Name="arrEqualsReleaseNames" Type="InArgument(s:String[])" />
  </x:Members>
  <this:Get_an_Item_or_Stop.intProcessingLimit>
    <InArgument x:TypeArguments="x:Int32" />
  </this:Get_an_Item_or_Stop.intProcessingLimit>
  <this:Get_an_Item_or_Stop.arrNotReleaseNames>
    <InArgument x:TypeArguments="s:String[]" />
  </this:Get_an_Item_or_Stop.arrNotReleaseNames>
  <this:Get_an_Item_or_Stop.strQueueName>
    <InArgument x:TypeArguments="x:String" />
  </this:Get_an_Item_or_Stop.strQueueName>
  <this:Get_an_Item_or_Stop.strQueueFolder>
    <InArgument x:TypeArguments="x:String" />
  </this:Get_an_Item_or_Stop.strQueueFolder>
  <this:Get_an_Item_or_Stop.arrEqualsReleaseNames>
    <InArgument x:TypeArguments="s:String[]" />
  </this:Get_an_Item_or_Stop.arrEqualsReleaseNames>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1314,2012</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Get_an_Item_or_Stop_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>Microsoft.Rest</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>Microsoft.Rest.ClientRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get an Item" sap:VirtualizedContainerService.HintSize="913,1740" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="boolEnd" />
      <Variable x:TypeArguments="x:Boolean" Name="boolCheckJobs" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign: Declarations" sap:VirtualizedContainerService.HintSize="871,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[intProcessingLimit]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">[If (intProcessingLimit = 0, Integer.MaxValue, intProcessingLimit)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">[arrEqualsReleaseNames]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">[If (arrEqualsReleaseNames Is Nothing, New String() {}, arrEqualsReleaseNames)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">[arrNotReleaseNames]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">[If (arrNotReleaseNames Is Nothing, New String() {}, arrNotReleaseNames)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Boolean">[boolCheckJobs]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Boolean">[If (arrEqualsReleaseNames.Length &lt;&gt; 0 Or arrNotReleaseNames.Length &lt;&gt; 0, True, False)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope: Get an Item" sap:VirtualizedContainerService.HintSize="871,1417" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="20" RetryInterval="00:00:30">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Try to Get an Item" sap:VirtualizedContainerService.HintSize="829,1236" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:Object))" Name="listActiveJobs" />
              <Variable x:TypeArguments="x:Boolean" Name="boolStop" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ShouldStop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="787,22" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[boolStop]" />
            <Assign DisplayName="Assign: boolEnd" sap:VirtualizedContainerService.HintSize="787,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[boolEnd]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[boolStop Or intProcessed &gt;= intProcessingLimit]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[Not boolEnd]" DisplayName="If: Not Stopping" sap:VirtualizedContainerService.HintSize="787,434" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <TryCatch DisplayName="Try Catch: Get Item" sap:VirtualizedContainerService.HintSize="438,287" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <eo:Get_Item MachineName="{x:Null}" RobotName="{x:Null}" DisplayName="Get Item" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Get_Item_2" QueueFolder="[strQueueFolder]" QueueName="[strQueueName]" TransactionItem="[itemTransaction]" />
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="ui:OrchestratorHttpException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:OrchestratorHttpException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:OrchestratorHttpException" Name="exception" />
                        </ActivityAction.Argument>
                        <Assign DisplayName="Assign: boolEnd" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolEnd]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <Assign DisplayName="Assign: Processed" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[intProcessed]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[If (itemTransaction IsNot Nothing, intProcessed + 1, intProcessed)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </TryCatch.Finally>
                </TryCatch>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Stop" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <el:Append_to_Log DisplayName="Append to Log" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Append_to_Log_1" LogLevel="Warn" LogMessage="[If (boolStop, &quot;Stop requested from Orchestrator...&quot;, &quot;Processing limit reached!&quot;)]" />
                  <Assign DisplayName="Assign: Clear Item" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:QueueItem">[itemTransaction]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[itemTransaction Is Nothing And Not boolEnd]" DisplayName="If: No Item Retrieved, No Error, or No Stop" sap:VirtualizedContainerService.HintSize="787,508" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <If Condition="[boolCheckJobs]" DisplayName="If: Checking for Jobs" sap:VirtualizedContainerService.HintSize="611,361" sap2010:WorkflowViewState.IdRef="If_11">
                  <If.Then>
                    <Sequence DisplayName="Check on Jobs" sap:VirtualizedContainerService.HintSize="304,276" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:Object))" Name="listPendingJobs" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <eo:Get_OData_Jobs CustomQuery="{x:Null}" Top="{x:Null}" DisplayName="Get OData Jobs: Running" EqualReleaseNames="[arrEqualsReleaseNames]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Get_OData_Jobs_2" JobStatus="[{&quot;Running&quot;}]" ListJobs="[listActiveJobs]" NotReleaseNames="[arrNotReleaseNames]">
                        <eo:Get_OData_Jobs.ThisReleaseName>
                          <InArgument x:TypeArguments="x:String" />
                        </eo:Get_OData_Jobs.ThisReleaseName>
                      </eo:Get_OData_Jobs>
                      <eo:Get_OData_Jobs CustomQuery="{x:Null}" Top="{x:Null}" DisplayName="Get OData Jobs: Pending" EqualReleaseNames="[arrEqualsReleaseNames]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Get_OData_Jobs_3" JobStatus="[{&quot;Pending&quot;}]" ListJobs="[listPendingJobs]" NotReleaseNames="[arrNotReleaseNames]">
                        <eo:Get_OData_Jobs.ThisReleaseName>
                          <InArgument x:TypeArguments="x:String" />
                        </eo:Get_OData_Jobs.ThisReleaseName>
                      </eo:Get_OData_Jobs>
                      <Assign DisplayName="Assign: If Active Jobs" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[boolEnd]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">[If (listActiveJobs.Count &gt; 0 And listPendingJobs.Count = 0, False, True)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Assign: boolEnd" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[boolEnd]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="IsTrue_2" Input="[boolEnd Or itemTransaction IsNot Nothing]" />
        </ActivityFunc>
      </ui:RetryScope.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RetryScope>
  </Sequence>
</Activity>