<Activity mc:Ignorable="sap sap2010" x:Class="Convert_PDF_to_Word" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ec="clr-namespace:EZFramework.Cleaning;assembly=EZFramework" xmlns:el="clr-namespace:EZFramework.Logging;assembly=EZFramework" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:p1="http://schemas.uipath.com/workflow/activities/word" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="file" Type="InArgument(x:String)" />
    <x:Property Name="strWordLabScan" Type="OutArgument(x:String)" />
    <x:Property Name="strPDFLabScan" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>991,3663</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Convert_PDF_to_Word_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Convert PDF to Word" sap:VirtualizedContainerService.HintSize="566,3558" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strFileDocx" />
      <Variable x:TypeArguments="x:Boolean" Name="boolExistsFile" />
      <Variable x:TypeArguments="ui:Browser" Name="uiOCRBrowser" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <el:Append_to_Log DisplayName="Append to Log" sap:VirtualizedContainerService.HintSize="524,22" sap2010:WorkflowViewState.IdRef="Append_to_Log_1" LogLevel="Info" LogMessage="Converting to Word..." />
    <Assign DisplayName="Assign: Replace .pdf to .docx" sap:VirtualizedContainerService.HintSize="524,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strFileDocx]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[file.replace(".pdf", ".docx")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:RetryScope DisplayName="Retry Scope: Check there is no docx File" sap:VirtualizedContainerService.HintSize="524,203" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="60" RetryInterval="00:00:01">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <ui:Delete ContinueOnError="True" DisplayName="Delete: docx file" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[strFileDocx]" />
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[Not System.IO.File.Exists(strFileDocx)]" />
        </ActivityFunc>
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <ui:CommentOut sap2010:Annotation.AnnotationText="Adobe API to Convert from PDF to Word" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="524,93" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="422,486" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Convert to Word with Adobe API" sap:VirtualizedContainerService.HintSize="380,394" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strAdobeAPICredentials" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign: Adobe API Tools Path" sap:VirtualizedContainerService.HintSize="338,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strAdobeAPICredentials]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[dicConfig("Path.CredentialsJSON").Item2.Replace("[USERNAME]", Environment.UserName)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="Try&#xA;&#x9;Dim credentials As Credentials = Credentials.ServiceAccountCredentialsBuilder().FromFile(strAdobeAPICredentials).Build()&#xA;&#x9;Dim executionContext As ExecutionContext = ExecutionContext.Create(credentials)&#xA;&#x9;Dim exportPdfOperation As ExportPDFOperation = ExportPDFOperation.CreateNew(ExportPDFTargetFormat.DOCX)&#xA;&#x9;Dim sourceFileRef As FileRef = FileRef.CreateFromLocalFile(file)&#xA;&#x9;exportPdfOperation.SetInput(sourceFileRef)&#xA;&#x9;&#xA;&#x9;Dim result As FileRef = exportPdfOperation.Execute(executionContext)&#xA;&#x9;result.SaveAs(strFileDocx)&#xA;&#xA;Catch ex As Exception&#xA;&#x9;Console.WriteLine(&quot;Exception occurred with Adobe API: &quot; + ex.Message)&#xA;End Try" DisplayName="Invoke code: Convert File to docx" sap:VirtualizedContainerService.HintSize="338,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="file">[file]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="strFileDocx">[strFileDocx]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="strAdobeAPICredentials">[strAdobeAPICredentials]</InArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:OpenApplication ApplicationWindow="{x:Null}" TimeoutMS="{x:Null}" WorkingDirectory="{x:Null}" Arguments="[file]" DisplayName="Open Application 'Acrobat.exe Adobe'" FileName="C:\Program Files (x86)\Adobe\Acrobat DC\Acrobat\Acrobat.exe" sap:VirtualizedContainerService.HintSize="524,1124" sap2010:WorkflowViewState.IdRef="OpenApplication_2" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' /&gt;">
      <ui:OpenApplication.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Export to Word" sap:VirtualizedContainerService.HintSize="476,1016" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
            <el:Append_to_Log DisplayName="Append to Log" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="Append_to_Log_4" LogLevel="Info" LogMessage="Hotkey to Export..." />
            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBetweenKeys="500" DisplayName="Type Into: Export to Word Hotkeys" sap:VirtualizedContainerService.HintSize="434,96" sap2010:WorkflowViewState.IdRef="TypeInto_8" Text="[k(alt)]ftww">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="5166bbe5-7bce-47d1-9b86-7a7ebc2dd797">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Acrobat.exe  Save As'" sap:VirtualizedContainerService.HintSize="434,494" sap2010:WorkflowViewState.IdRef="WindowScope_4" Selector="&lt;wnd app='acrobat.exe' cls='#32770' title='Save As*' /&gt;">
              <ui:WindowScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Enter New FileName" sap:VirtualizedContainerService.HintSize="376,386" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <el:Append_to_Log DisplayName="Append to Log" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Append_to_Log_5" LogLevel="Info" LogMessage="Saving as .docx..." />
                    <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'file name'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="TypeInto_9" SimulateType="True" Text="[strFileDocx.Replace(&quot;.docx&quot;, &quot;&quot;)]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="708c0648-c80d-421f-b45d-a03d70d10281" Selector="&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'file name'" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="TypeInto_10" Text="%[k(end)].docx[k(enter)]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="708c0648-c80d-421f-b45d-a03d70d10281" Selector="&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                  </Sequence>
                </ActivityAction>
              </ui:WindowScope.Body>
            </ui:WindowScope>
            <el:Append_to_Log DisplayName="Append to Log" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="Append_to_Log_6" LogLevel="Info" LogMessage="Closing Acrobat..." />
            <ui:CloseWindow Selector="{x:Null}" TimeoutMS="{x:Null}" UseWindow="{x:Null}" DisplayName="Close Window" sap:VirtualizedContainerService.HintSize="434,68" sap2010:WorkflowViewState.IdRef="CloseWindow_2" WaitForReady="INTERACTIVE" />
          </Sequence>
        </ActivityAction>
      </ui:OpenApplication.Body>
    </ui:OpenApplication>
    <ui:RetryScope DisplayName="Retry Scope: Get OCR Text" sap:VirtualizedContainerService.HintSize="524,848" sap2010:WorkflowViewState.IdRef="RetryScope_5" NumberOfRetries="5" RetryInterval="00:00:03">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <TryCatch DisplayName="Try Catch: Get OCR Text" sap:VirtualizedContainerService.HintSize="482,674" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser: Get OCR Text" sap:VirtualizedContainerService.HintSize="444,447" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" NewSession="True" Private="True" UiBrowser="[uiOCRBrowser]" Url="[&quot;file:\\&quot; + file.Replace(&quot; &quot;, &quot;%20&quot;)]">
                <ui:OpenBrowser.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Get OCR Text" sap:VirtualizedContainerService.HintSize="376,346" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <el:Append_to_Log DisplayName="Append to Log" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Append_to_Log_3" LogLevel="Info" LogMessage="Getting backup OCR..." />
                      <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_2" />
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'All Text'" sap:VirtualizedContainerService.HintSize="334,130" sap2010:WorkflowViewState.IdRef="GetOCRText_1">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_1" Image="[Image]" Language="english" Profile="Screen" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3c36fb0a-0335-4fef-8367-4c6db4d35d5a" Selector="&lt;wnd app='chrome.exe' cls='Chrome_WidgetWin_1' title='*' /&gt;&lt;ctrl name='*' role='document' /&gt;&lt;ctrl name='*' role='document' /&gt;&lt;ctrl name='*' role='pane' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[strPDFLabScan]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:OpenBrowser.Body>
              </ui:OpenBrowser>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="448,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Failed OCR Text" sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <el:Append_to_Log DisplayName="Append to Log" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Append_to_Log_7" LogLevel="Warn" LogMessage="Failed to get OCR Text." />
                    <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
            <TryCatch.Finally>
              <ui:CloseTab Browser="[uiOCRBrowser]" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="CloseTab_3" />
            </TryCatch.Finally>
          </TryCatch>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <el:Append_to_Log DisplayName="Append to Log" sap:VirtualizedContainerService.HintSize="524,22" sap2010:WorkflowViewState.IdRef="Append_to_Log_2" LogLevel="Info" LogMessage="Checking for successful conversion..." />
    <ui:RetryScope DisplayName="Retry Scope: Check for docx File" sap:VirtualizedContainerService.HintSize="524,270" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="30" RetryInterval="00:00:01">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <ui:PathExists DisplayName="Path Exists: docx File" Exists="[boolExistsFile]" sap:VirtualizedContainerService.HintSize="334,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[strFileDocx]" PathType="File" />
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="IsTrue_2" Input="[System.IO.File.Exists(strFileDocx)]" />
        </ActivityFunc>
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <ec:Kill_Processes DisplayName="Kill Processes" sap:VirtualizedContainerService.HintSize="524,22" sap2010:WorkflowViewState.IdRef="Kill_Processes_1" Processes="[{&quot;Acrobat&quot;, &quot;WINWORD&quot;, &quot;chrome&quot;}]" />
    <ui:RetryScope DisplayName="Retry Scope: Read docx" sap:VirtualizedContainerService.HintSize="524,273" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="10" RetryInterval="00:00:05">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <p1:DocumentReadText DisplayName="Read Text: Word Lab Scan" FilePath="[strFileDocx]" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="DocumentReadText_1" Text="[strWordLabScan]" />
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="IsTrue_3" Input="[Not String.IsNullOrWhiteSpace(strWordLabScan)]" />
        </ActivityFunc>
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <ui:MultipleAssign DisplayName="Multiple Assign: LowerCasing" sap:VirtualizedContainerService.HintSize="524,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strWordLabScan]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[strWordLabScan.ToLower]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strPDFLabScan]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[strPDFLabScan.ToLower]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
  </Sequence>
</Activity>